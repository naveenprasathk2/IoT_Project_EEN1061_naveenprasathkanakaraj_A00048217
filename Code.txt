
#include <WiFi.h>
#include <PubSubClient.h>
#include "DHT.h"
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

#define TEMP_THRESHOLD 35.0   
#define GAS_THRESHOLD 3000    

#define LED_PIN 25 

const char* ssid = "Wokwi-GUEST";
const char* password = "";
const char* mqtt_server = "broker.hivemq.com";
const char* mqtt_topic = "masters_project/A00048217/data";
WiFiClient espClient;
PubSubClient client(espClient);
#define DHT_PIN 15
#define GAS_SENSOR_PIN 34
#define DHT_TYPE DHT22
DHT dht(DHT_PIN, DHT_TYPE);
Adafruit_MPU6050 mpu;

String check_hazards(float temp, int gas) {
  if (temp > TEMP_THRESHOLD) {
    digitalWrite(LED_PIN, HIGH); 
    return "HIGH_TEMP";
  }
  if (gas > GAS_THRESHOLD) {
    digitalWrite(LED_PIN, HIGH); 
    return "HIGH_GAS";
  }
  
  digitalWrite(LED_PIN, LOW); 
  return "OK";
}

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("ESP32_Hazard_Vest_Client")) {
      Serial.println("connected");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  dht.begin();
  mpu.begin();
  Serial.println("Sensors Initialized.");
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  int gasValue = analogRead(GAS_SENSOR_PIN);
  String alert_status = check_hazards(temperature, gasValue);

  char json_payload[250];
  sprintf(json_payload, 
    "{\"studentID\":\"A00048217\", \"status\":\"%s\", \"temperature\":%.2f, \"humidity\":%.2f, \"accel_x\":%.2f, \"accel_y\":%.2f, \"accel_z\":%.2f, \"gas_raw\":%d}",
    alert_status.c_str(), temperature, humidity, a.acceleration.x, a.acceleration.y, a.acceleration.z, gasValue);

  Serial.print("Publishing message: ");
  Serial.println(json_payload);
  client.publish(mqtt_topic, json_payload);

  delay(5000);
}


